services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: plants_db
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    healthcheck: 
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 10s

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: always

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest 
    container_name: mlflow
    command: >
      mlflow server
        --backend-store-uri mysql+pymysql://root:root@mysql:3306/plants_db
        --default-artifact-root s3://mlflow/
        --host 0.0.0.0
        --port 5000
    ports:
      - "5000:5000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
    depends_on:
      mysql:
        condition: service_started
      minio:
        condition: service_started
    restart: always

  airflow:
    build: . 
    container_name: airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: mysql+mysqldb://root:root@mysql:3306/plants_db
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__RBAC: "true"
      AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
    ports:
      - "8080:8080"
    command: bash -c "airflow db init && airflow users create -u admin -p admin -r Admin -e admin@example.com -f Admin -l User && airflow webserver & airflow scheduler"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    depends_on:
      mysql:
        condition: service_healthy
      mlflow:
        condition: service_started
    restart: always

volumes:
  mysql_data:
  minio_data: